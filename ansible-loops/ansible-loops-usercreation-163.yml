#!/root/ansible/myansible/bin/ansible-playbook
# This shebang line is unconventional and not used by Ansible. Normally, you run playbooks with the `ansible-playbook` command.
# This line can be ignored or removed in standard usage.

- name: Loops in Ansible Playbook Part I  # Playbook name for identification
  hosts: all                              # Run this playbook on all target hosts defined in the inventory
  remote_user: ec2-user                   # Connect to remote machines as the ec2-user
  become: 'yes'                           # Use privilege escalation (sudo)
  become_user: root                       # Run the tasks as the root user

  vars:
    alpha: [ 'a', 'b', 'c', 'd' ]         # A list of letters (used later for loop)
    numbers:  [ 1, 2, 3, 4 ]              # A list of numbers (same length as alpha, used for paired looping)

  tasks:
    # --------------------------
    # Task 1: Add multiple users using a simple list loop
    # --------------------------
    - name: add several users in one go
      user:
        name: "{{ item }}"               # Use each item from the list as the username
        state: absent                   # Ensure the user is present (created if not exists)/ absent to remove users
        groups: "games"                  # Add the user to the 'games' group
      with_items:
        - testuser1
        - testuser2
        - testuser3
        - testuser4
        - testuser5                      # These users will be created in a loop

    # --------------------------
    # Task 2: Add users with different groups using dictionaries
    # --------------------------
    - name: add several users
      user:
        name: "{{ item.name }}"          # Extract username from dictionary
        state: absent                    # Ensure the user exists/ use absent to remove users
        groups: "{{ item.groups }}"      # Assign the user to a specific group from the dictionary
      with_items:
        - { name: 'testuser6', groups: 'nobody' }
        - { name: 'testuser7', groups: 'nobody' }
        - { name: 'testuser8', groups: 'postfix' }
        - { name: 'testuser9', groups: 'postfix' }  # Loop over dictionary items to create users with specific groups

    # --------------------------
    # Task 3: Loop through two lists together
    # --------------------------
    - name: Loop Over Set of Collection variable
      debug:
        msg: "{{ item.0 }} and {{ item.1 }}"  # Output paired items (e.g., 'a and 1', 'b and 2', etc.)
      with_together:
        - "{{ alpha }}"   # First list: ['a', 'b', 'c', 'd']
        - "{{ numbers }}" # Second list: [1, 2, 3, 4]
        # 'with_together' combines the two lists element-wise like zip(alpha, numbers)

